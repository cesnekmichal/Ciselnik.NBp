package ciselnik_dlouheho_drivi.gui;

import ciselnik_dlouheho_drivi.gui.img.Resource;
import ciselnik_dlouheho_drivi.structures.DruhDreviny;
import ciselnik_dlouheho_drivi.structures.TridaDrevin;
import ciselnik_dlouheho_drivi.structures.TypStromu;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.math.BigDecimal;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.apache.log4j.Level;
import unidataz.components.edit.UniEditComboBox;
import unidataz.laf.UniLookAndFeel;
import unidataz.unipos.client.components.window.UniDialog;
import unidataz.util.GLog;

/**
 *
 * @author Michal
 */
public class KalkulatorKlasickeMetodyDialog extends UniDialog {

    /**
     * Creates new form KalkulatorKlasickeMetodyDialog
     */
    public KalkulatorKlasickeMetodyDialog(java.awt.Window parent) {
        super(parent);
        initComponents();
        
        setTitle("Kalkulátor Klasické metody");
        setIconImage(Resource.getImg(Resource.ImgKey.calc));
        setResizable(false);
        setVisibleHelpButton(false);
        
        field_DruhDreviny.setViewer(new UniEditComboBox.Viewer<DruhDreviny>() {
            @Override
            public String view(DruhDreviny item) {
                return item.name() + " - " + item.popis;
            }
        });
        field_DruhDreviny.setData(DruhDreviny.values());
        field_DruhDreviny.addChangeListener(new UniEditComboBox.ChangeListener<DruhDreviny>() {
            @Override
            public void onChange(UniEditComboBox uniEditComboBox, DruhDreviny selectedItem) {
                if(selectedItem!=null){
                    field_Tabulka.setSelectedItem(selectedItem.tridaDrevin);
                    field_TypStromu.setSelectedItem(selectedItem.tridaDrevin.typ);
                } else {
                    field_Tabulka.setSelectedItem(null);
                    field_TypStromu.setSelectedItem(null);
                }
                updateValue();
            }
        });
        
        field_TypStromu.setViewer(new UniEditComboBox.Viewer<TypStromu>() {
            @Override
            public String view(TypStromu item) {
                return item.name();
            }
        });
        field_TypStromu.setData(TypStromu.values());
        
        field_Tabulka.setViewer(new UniEditComboBox.Viewer<TridaDrevin>() {
            @Override
            public String view(TridaDrevin item) {
                return item.name();
            }
        });
        field_Tabulka.setData(TridaDrevin.values());
        
        field_Prumer.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                updateValue();
            }
        });
        field_Delka.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                updateValue();
            }
        });
        MouseWheelListener mwl = new MouseWheelListener() {
            @Override
            public void mouseWheelMoved(MouseWheelEvent e) {
                Robot r;
                try {
                    r = new Robot();
                } catch (AWTException ex) {
                    GLog.elog(Level.ERROR,GLog.EXCEPTION, ex, ex);
                    return;
                }
                if (e.getWheelRotation() < 0) {//Nahoru
                    r.keyPress(KeyEvent.VK_UP);
                } else {                       //Dolu
                    r.keyPress(KeyEvent.VK_DOWN);
                }
            }
        };
        field_Delka.addMouseWheelListener(mwl);
        field_Prumer.addMouseWheelListener(mwl);
        field_hmota.overwritableTextField.setForeground(Color.BLUE);
        field_hmota.overwritableTextField.setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    private void updateValue(){
        BigDecimal value = null;
        Integer prumer = (Integer) field_Prumer.getValue();
        Integer delka = (Integer) field_Delka.getValue();
        Object selectedItem = field_DruhDreviny.getSelectedItem();
        if(selectedItem instanceof DruhDreviny){
            DruhDreviny dd = (DruhDreviny) selectedItem;
            value = dd.tridaDrevin.objem(delka, prumer);
        }
        field_hmota.setValue(value);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        field_DruhDreviny = new unidataz.components.edit.UniEditComboBox();
        label_DruhDreviny = new javax.swing.JLabel();
        label_TypStromu = new javax.swing.JLabel();
        field_TypStromu = new unidataz.components.edit.UniEditComboBox();
        field_Delka = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        field_Tabulka = new unidataz.components.edit.UniEditComboBox();
        field_Prumer = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        field_hmota = new unidataz.components.edit.UniEditBigDecimal();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        label_DruhDreviny.setText("Druh dřeviny");

        label_TypStromu.setText("Typ stromu");

        field_TypStromu.setEnabled(false);

        field_Delka.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel1.setText("Délka v m");

        jLabel2.setText("Tabulka");

        field_Tabulka.setEnabled(false);

        field_Prumer.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(19), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel3.setText("Průměr v cm");

        field_hmota.setEditable(false);
        field_hmota.setPrecision(2);

        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Objem");

        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("m3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_DruhDreviny)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_DruhDreviny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_TypStromu)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_Delka)
                            .addComponent(field_TypStromu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_Tabulka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_Prumer)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(field_hmota, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, label_DruhDreviny, label_TypStromu});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(field_DruhDreviny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_DruhDreviny))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(field_Tabulka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(field_TypStromu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_TypStromu))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field_Delka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field_Prumer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(field_hmota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        UniLookAndFeel.setUniLaF();

//        try {
//            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (Exception e) {
//            // If Nimbus is not available, you can set the GUI to another look and feel.
//        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                KalkulatorKlasickeMetodyDialog dialog = new KalkulatorKlasickeMetodyDialog(null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner field_Delka;
    private unidataz.components.edit.UniEditComboBox field_DruhDreviny;
    private javax.swing.JSpinner field_Prumer;
    private unidataz.components.edit.UniEditComboBox field_Tabulka;
    private unidataz.components.edit.UniEditComboBox field_TypStromu;
    private unidataz.components.edit.UniEditBigDecimal field_hmota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel label_DruhDreviny;
    private javax.swing.JLabel label_TypStromu;
    // End of variables declaration//GEN-END:variables
}
